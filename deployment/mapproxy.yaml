# -------------------------------
# MapProxy example configuration.
# -------------------------------
#
# This is a minimal MapProxy configuration.
# See full_example.yaml and the documentation for more options.
#

# Starts the following services:
# Demo:
#     http://localhost:8080/demo
# WMS:
#     capabilities: http://localhost:8080/service?REQUEST=GetCapabilities
# WMTS:
#     capabilities: http://localhost:8080/wmts/1.0.0/WMTSCapabilities.xml
#     first tile: http://localhost:8080/wmts/osm/webmercator/0/0/0.png
# Tile service (compatible with OSM/etc.)
#     first tile: http://localhost:8080/tiles/osm/webmercator/0/0/0.png
# TMS:
#     note: TMS is not compatible with OSM/Google Maps/etc.
#     fist tile: http://localhost:8080/tms/1.0.0/osm/webmercator/0/0/0.png
# KML:
#     initial doc: http://localhost:8080/kml/osm/webmercator

services:
  demo:
  tms:
    use_grid_names: true
    # origin for /tiles service
    origin: 'nw'
  kml:
      use_grid_names: true
  wmts:
  wms:
    md:
      title: MapProxy WMS Proxy
      abstract: This is a minimal MapProxy example.

layers:
  - name: osm
    title: Omniscale OSM WMS - osm.omniscale.net
    sources: [osm_cache]
  - name: osm_mapsurfer_roads
    title: OSM MapSurfer Roads - korona.geog.uni-heidelberg.de
    sources: [osm_mapsurfer_roads_cache]


caches:
  osm_cache:
    grids: [webmercator]
    sources: [osm_wms]
  osm_mapsurfer_roads_cache:
    grids: [webmercator]
    sources: [osm_mapsurfer_roads_tile]

sources:
  osm_wms:
    type: wms
    req:
      # use of this source is only permitted for testing
      url: http://osm.omniscale.net/proxy/service?
      layers: osm
  osm_mapsurfer_roads_tile:
    type: tile
    url: https://korona.geog.uni-heidelberg.de/tiles/roads/x=%(x)s&y=%(y)s&z=%(z)s
    transparent: true
    grid: GLOBAL_WEBMERCATOR

grids:
    webmercator:
        base: GLOBAL_WEBMERCATOR

globals:
